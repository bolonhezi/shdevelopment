// <auto-generated />
using System;
using Imgeneus.Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Imgeneus.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220705092601_KillsFromUshortToUint")]
    partial class KillsFromUshortToUint
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Imgeneus.Database.Entities.DbBankItem", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<DateTime?>("ClaimTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("Count")
                        .HasColumnType("tinyint unsigned");

                    b.Property<bool>("IsClaimed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("ObtainmentTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("Slot")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("TypeId")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("BankItems");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbCharacter", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<ushort>("Angle")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("AutoDex")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("AutoInt")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("AutoLuc")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("AutoRec")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("AutoStr")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("AutoWis")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Class")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("DATETIME");

                    b.Property<uint>("Deaths")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("Defeats")
                        .HasColumnType("int unsigned");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime(6)");

                    b.Property<ushort>("Dexterity")
                        .HasColumnType("smallint unsigned");

                    b.Property<uint>("Exp")
                        .HasColumnType("int unsigned");

                    b.Property<byte>("Face")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Gender")
                        .HasColumnType("tinyint unsigned");

                    b.Property<uint>("Gold")
                        .HasColumnType("int unsigned");

                    b.Property<uint?>("GuildId")
                        .HasColumnType("int unsigned");

                    b.Property<DateTime?>("GuildJoinTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("GuildLeaveTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("GuildRank")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Hair")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("HealthPoints")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("Height")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("Intelligence")
                        .HasColumnType("smallint unsigned");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsRename")
                        .HasColumnType("tinyint(1)");

                    b.Property<uint>("Kills")
                        .HasColumnType("int unsigned");

                    b.Property<ushort>("Level")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("Luck")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("ManaPoints")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("Map")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("Mode")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.Property<float>("PosX")
                        .HasColumnType("float");

                    b.Property<float>("PosY")
                        .HasColumnType("float");

                    b.Property<float>("PosZ")
                        .HasColumnType("float");

                    b.Property<byte>("Race")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("Rec")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("SkillPoint")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("Slot")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("StaminaPoints")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("StatPoint")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("Strength")
                        .HasColumnType("smallint unsigned");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<uint>("Victories")
                        .HasColumnType("int unsigned");

                    b.Property<ushort>("Wisdom")
                        .HasColumnType("smallint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbCharacterActiveBuff", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<uint>("CharacterId")
                        .HasColumnType("int unsigned");

                    b.Property<DateTime>("ResetTime")
                        .HasColumnType("datetime(6)");

                    b.Property<ushort>("SkillId")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("SkillLevel")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("CharacterActiveBuff");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbCharacterFriend", b =>
                {
                    b.Property<uint>("CharacterId")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("FriendId")
                        .HasColumnType("int unsigned");

                    b.HasKey("CharacterId", "FriendId");

                    b.HasIndex("FriendId");

                    b.ToTable("CharacterFriends");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbCharacterItems", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<byte>("Bag")
                        .HasColumnType("tinyint unsigned");

                    b.Property<uint>("CharacterId")
                        .HasColumnType("int unsigned");

                    b.Property<byte>("Count")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Craftname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("DyeColorAlpha")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("DyeColorB")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("DyeColorG")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("DyeColorR")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("DyeColorSaturation")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime?>("ExpirationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("GemTypeId1")
                        .HasColumnType("int");

                    b.Property<int>("GemTypeId2")
                        .HasColumnType("int");

                    b.Property<int>("GemTypeId3")
                        .HasColumnType("int");

                    b.Property<int>("GemTypeId4")
                        .HasColumnType("int");

                    b.Property<int>("GemTypeId5")
                        .HasColumnType("int");

                    b.Property<int>("GemTypeId6")
                        .HasColumnType("int");

                    b.Property<bool>("HasDyeColor")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("MakeType")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<ushort>("Quality")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("Slot")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("TypeId")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("CharacterItems");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbCharacterQuest", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<uint>("CharacterId")
                        .HasColumnType("int unsigned");

                    b.Property<byte>("Count1")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Count2")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Count3")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("Delay")
                        .HasColumnType("smallint unsigned");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Finish")
                        .HasColumnType("tinyint(1)");

                    b.Property<short>("QuestId")
                        .HasColumnType("smallint");

                    b.Property<bool>("Success")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("CharacterQuest");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbCharacterSavePositions", b =>
                {
                    b.Property<uint>("CharacterId")
                        .HasColumnType("int unsigned");

                    b.Property<byte>("Slot")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("MapId")
                        .HasColumnType("smallint unsigned");

                    b.Property<float>("X")
                        .HasColumnType("float");

                    b.Property<float>("Y")
                        .HasColumnType("float");

                    b.Property<float>("Z")
                        .HasColumnType("float");

                    b.HasKey("CharacterId", "Slot");

                    b.ToTable("CharacterSavePoint");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbCharacterSkill", b =>
                {
                    b.Property<uint>("CharacterId")
                        .HasColumnType("int unsigned");

                    b.Property<ushort>("SkillId")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("Number")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("SkillLevel")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("CharacterId", "SkillId");

                    b.ToTable("CharacterSkill");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbGuild", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<byte>("Country")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Etin")
                        .HasColumnType("int");

                    b.Property<bool>("HasHouse")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("KeepEtin")
                        .HasColumnType("int");

                    b.Property<uint>("MasterId")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Message")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<byte>("Rank")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("MasterId");

                    b.ToTable("Guilds");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbGuildNpcLvl", b =>
                {
                    b.Property<uint>("GuildId")
                        .HasColumnType("int unsigned");

                    b.Property<int>("NpcType")
                        .HasColumnType("int");

                    b.Property<byte>("Group")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("NpcLevel")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("GuildId", "NpcType", "Group", "NpcLevel");

                    b.ToTable("GuildNpcLvl");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbGuildWarehouseItem", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<byte>("Count")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Craftname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("DyeColorAlpha")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("DyeColorB")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("DyeColorG")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("DyeColorR")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("DyeColorSaturation")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime?>("ExpirationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("GemTypeId1")
                        .HasColumnType("int");

                    b.Property<int>("GemTypeId2")
                        .HasColumnType("int");

                    b.Property<int>("GemTypeId3")
                        .HasColumnType("int");

                    b.Property<int>("GemTypeId4")
                        .HasColumnType("int");

                    b.Property<int>("GemTypeId5")
                        .HasColumnType("int");

                    b.Property<int>("GemTypeId6")
                        .HasColumnType("int");

                    b.Property<uint>("GuildId")
                        .HasColumnType("int unsigned");

                    b.Property<bool>("HasDyeColor")
                        .HasColumnType("tinyint(1)");

                    b.Property<ushort>("Quality")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("Slot")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("TypeId")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.ToTable("GuildWarehouseItems");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbItem", b =>
                {
                    b.Property<byte>("Type")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("TypeId")
                        .HasColumnType("tinyint unsigned")
                        .HasColumnName("TypeID");

                    b.Property<byte>("AttackTime")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Attackfighter")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Attackmage")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("Buy")
                        .HasColumnType("int");

                    b.Property<ushort>("ConstDex")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("ConstHP")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("ConstInt")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("ConstLuc")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("ConstMP")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("ConstRec")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("ConstSP")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("ConstStr")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("ConstWis")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("Count")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Country")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("Defense")
                        .HasColumnType("smallint unsigned")
                        .HasColumnName("Effect3");

                    b.Property<byte>("Defensefighter")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Defensemage")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("Drop")
                        .HasColumnType("smallint unsigned");

                    b.Property<uint>("Duration")
                        .HasColumnType("int unsigned");

                    b.Property<byte>("Element")
                        .HasColumnType("tinyint unsigned")
                        .HasColumnName("Attrib");

                    b.Property<byte>("Exp")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("Grade")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("Grow")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ItemID");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<ushort>("MinAttack")
                        .HasColumnType("smallint unsigned")
                        .HasColumnName("Effect1");

                    b.Property<byte>("Patrolrogue")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("PlusAttack")
                        .HasColumnType("smallint unsigned")
                        .HasColumnName("Effect2");

                    b.Property<ushort>("Quality")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("Range")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("ReqDex")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("ReqIg")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("ReqInt")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("ReqOg")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("ReqRec")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("ReqStr")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("ReqVg")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("ReqWis")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("Reqlevel")
                        .HasColumnType("smallint unsigned");

                    b.Property<short>("Reqluc")
                        .HasColumnType("smallint");

                    b.Property<ushort>("Resistance")
                        .HasColumnType("smallint unsigned")
                        .HasColumnName("Effect4");

                    b.Property<int>("Sell")
                        .HasColumnType("int");

                    b.Property<byte>("Server")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Shootrogue")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Slot")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Special")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Speed")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Type", "TypeId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbLevel", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<uint>("Exp")
                        .HasColumnType("int unsigned");

                    b.Property<ushort>("Level")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("Mode")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Id");

                    b.ToTable("Levels");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbMob", b =>
                {
                    b.Property<ushort>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint unsigned")
                        .HasColumnName("MobID");

                    b.Property<byte>("AI")
                        .HasColumnType("tinyint unsigned");

                    b.Property<short>("Attack1")
                        .HasColumnType("smallint");

                    b.Property<short>("Attack2")
                        .HasColumnType("smallint");

                    b.Property<short>("Attack3")
                        .HasColumnType("smallint");

                    b.Property<byte>("AttackAttrib1")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("AttackAttrib2")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("AttackOk1")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("AttackOk2")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("AttackOk3")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("AttackPlus1")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("AttackPlus2")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("AttackPlus3")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("AttackRange1")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("AttackRange2")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("AttackRange3")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("AttackSpecial1")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("AttackSpecial2")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("AttackSpecial3")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("AttackTime1")
                        .HasColumnType("int");

                    b.Property<int>("AttackTime2")
                        .HasColumnType("int");

                    b.Property<int>("AttackTime3")
                        .HasColumnType("int");

                    b.Property<ushort>("AttackType1")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("AttackType2")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("AttackType3")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("ChaseRange")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ChaseStep")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("ChaseTime")
                        .HasColumnType("int");

                    b.Property<byte>("Day")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("Defense")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("Dex")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("Element")
                        .HasColumnType("tinyint unsigned");

                    b.Property<short>("Exp")
                        .HasColumnType("smallint");

                    b.Property<byte>("Fraction")
                        .HasColumnType("tinyint unsigned")
                        .HasColumnName("AttackAttrib3");

                    b.Property<int>("HP")
                        .HasColumnType("int");

                    b.Property<ushort>("Level")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("Luc")
                        .HasColumnType("smallint unsigned");

                    b.Property<short>("MP")
                        .HasColumnType("smallint");

                    b.Property<ushort>("Magic")
                        .HasColumnType("smallint unsigned");

                    b.Property<string>("MobName")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<short>("MoneyMax")
                        .HasColumnType("smallint")
                        .HasColumnName("Money2");

                    b.Property<short>("MoneyMin")
                        .HasColumnType("smallint")
                        .HasColumnName("Money1");

                    b.Property<byte>("NormalStep")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("NormalTime")
                        .HasColumnType("int");

                    b.Property<int>("QuestItemId")
                        .HasColumnType("int");

                    b.Property<byte>("ResistSkill1")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistSkill2")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistSkill3")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistSkill4")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistSkill5")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistSkill6")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistState1")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistState10")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistState11")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistState12")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistState13")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistState14")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistState15")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistState2")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistState3")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistState4")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistState5")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistState6")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistState7")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistState8")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistState9")
                        .HasColumnType("tinyint unsigned");

                    b.Property<short>("SP")
                        .HasColumnType("smallint");

                    b.Property<byte>("Size")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("Wis")
                        .HasColumnType("smallint unsigned");

                    b.HasKey("Id");

                    b.ToTable("Mobs");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbMobItems", b =>
                {
                    b.Property<ushort>("MobId")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("ItemOrder")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("DropRate")
                        .HasColumnType("int");

                    b.Property<ushort>("Grade")
                        .HasColumnType("smallint unsigned");

                    b.HasKey("MobId", "ItemOrder");

                    b.ToTable("MobItems");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbQuickSkillBarItem", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<byte>("Bag")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Bar")
                        .HasColumnType("tinyint unsigned");

                    b.Property<uint>("CharacterId")
                        .HasColumnType("int unsigned");

                    b.Property<ushort>("Number")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("Slot")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("CharacterQuickItems");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<byte>("Faction")
                        .HasColumnType("tinyint unsigned");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastConnectionTime")
                        .HasColumnType("DATETIME");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("MaxMode")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<uint>("Points")
                        .HasColumnType("int unsigned");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.HasIndex("UserName", "Email")
                        .IsUnique();

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbWarehouseItem", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<byte>("Count")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Craftname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("DyeColorAlpha")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("DyeColorB")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("DyeColorG")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("DyeColorR")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("DyeColorSaturation")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime?>("ExpirationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("GemTypeId1")
                        .HasColumnType("int");

                    b.Property<int>("GemTypeId2")
                        .HasColumnType("int");

                    b.Property<int>("GemTypeId3")
                        .HasColumnType("int");

                    b.Property<int>("GemTypeId4")
                        .HasColumnType("int");

                    b.Property<int>("GemTypeId5")
                        .HasColumnType("int");

                    b.Property<int>("GemTypeId6")
                        .HasColumnType("int");

                    b.Property<bool>("HasDyeColor")
                        .HasColumnType("tinyint(1)");

                    b.Property<ushort>("Quality")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("Slot")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("TypeId")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("WarehouseItems");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbBankItem", b =>
                {
                    b.HasOne("Imgeneus.Database.Entities.DbUser", "User")
                        .WithMany("BankItems")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbCharacter", b =>
                {
                    b.HasOne("Imgeneus.Database.Entities.DbGuild", "Guild")
                        .WithMany("Members")
                        .HasForeignKey("GuildId");

                    b.HasOne("Imgeneus.Database.Entities.DbUser", "User")
                        .WithMany("Characters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbCharacterActiveBuff", b =>
                {
                    b.HasOne("Imgeneus.Database.Entities.DbCharacter", "Character")
                        .WithMany("ActiveBuffs")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbCharacterFriend", b =>
                {
                    b.HasOne("Imgeneus.Database.Entities.DbCharacter", "Character")
                        .WithMany("Friends")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imgeneus.Database.Entities.DbCharacter", "Friend")
                        .WithMany()
                        .HasForeignKey("FriendId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Friend");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbCharacterItems", b =>
                {
                    b.HasOne("Imgeneus.Database.Entities.DbCharacter", "Character")
                        .WithMany("Items")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbCharacterQuest", b =>
                {
                    b.HasOne("Imgeneus.Database.Entities.DbCharacter", "Character")
                        .WithMany("Quests")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbCharacterSavePositions", b =>
                {
                    b.HasOne("Imgeneus.Database.Entities.DbCharacter", "Character")
                        .WithMany("SavedPositions")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbCharacterSkill", b =>
                {
                    b.HasOne("Imgeneus.Database.Entities.DbCharacter", "Character")
                        .WithMany("Skills")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbGuild", b =>
                {
                    b.HasOne("Imgeneus.Database.Entities.DbCharacter", "Master")
                        .WithMany()
                        .HasForeignKey("MasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Master");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbGuildNpcLvl", b =>
                {
                    b.HasOne("Imgeneus.Database.Entities.DbGuild", "Guild")
                        .WithMany("NpcLvls")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbGuildWarehouseItem", b =>
                {
                    b.HasOne("Imgeneus.Database.Entities.DbGuild", "Guild")
                        .WithMany("WarehouseItems")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbQuickSkillBarItem", b =>
                {
                    b.HasOne("Imgeneus.Database.Entities.DbCharacter", "Character")
                        .WithMany("QuickItems")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbWarehouseItem", b =>
                {
                    b.HasOne("Imgeneus.Database.Entities.DbUser", "User")
                        .WithMany("WarehouseItems")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Imgeneus.Database.Entities.DbRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Imgeneus.Database.Entities.DbUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Imgeneus.Database.Entities.DbUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Imgeneus.Database.Entities.DbRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imgeneus.Database.Entities.DbUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Imgeneus.Database.Entities.DbUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbCharacter", b =>
                {
                    b.Navigation("ActiveBuffs");

                    b.Navigation("Friends");

                    b.Navigation("Items");

                    b.Navigation("Quests");

                    b.Navigation("QuickItems");

                    b.Navigation("SavedPositions");

                    b.Navigation("Skills");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbGuild", b =>
                {
                    b.Navigation("Members");

                    b.Navigation("NpcLvls");

                    b.Navigation("WarehouseItems");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbUser", b =>
                {
                    b.Navigation("BankItems");

                    b.Navigation("Characters");

                    b.Navigation("WarehouseItems");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using Imgeneus.Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Imgeneus.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20191203191738_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Imgeneus.Database.Entities.DbCharacter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<ushort>("Angle")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("Class")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("DATETIME");

                    b.Property<ushort>("Deaths")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("Defeats")
                        .HasColumnType("smallint unsigned");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime(6)");

                    b.Property<ushort>("Dexterity")
                        .HasColumnType("smallint unsigned");

                    b.Property<uint>("Exp")
                        .HasColumnType("int unsigned");

                    b.Property<byte>("Face")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Gender")
                        .HasColumnType("tinyint unsigned");

                    b.Property<uint>("Gold")
                        .HasColumnType("int unsigned");

                    b.Property<byte>("Hair")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("HealthPoints")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("Height")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("Intelligence")
                        .HasColumnType("smallint unsigned");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsRename")
                        .HasColumnType("tinyint(1)");

                    b.Property<ushort>("Kills")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("Level")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("Luck")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("ManaPoints")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("Map")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("Mode")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(16) CHARACTER SET utf8mb4")
                        .HasMaxLength(16);

                    b.Property<float>("PosX")
                        .HasColumnType("float");

                    b.Property<float>("PosY")
                        .HasColumnType("float");

                    b.Property<float>("PosZ")
                        .HasColumnType("float");

                    b.Property<byte>("Race")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("Rec")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("SkillPoint")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("Slot")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("StaminaPoints")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("StatPoint")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("Strength")
                        .HasColumnType("smallint unsigned");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<ushort>("Victories")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("Wisdom")
                        .HasColumnType("smallint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbCharacterItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<byte>("Bag")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<byte>("Count")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Craftname")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte[]>("Gems")
                        .IsRequired()
                        .HasColumnType("varbinary(6)")
                        .HasMaxLength(6);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("MakeType")
                        .IsRequired()
                        .HasColumnType("varchar(1) CHARACTER SET utf8mb4");

                    b.Property<ushort>("Quality")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("Slot")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("TypeId")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("CharacterItems");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<byte>("Authority")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(30) CHARACTER SET utf8mb4")
                        .HasMaxLength(30);

                    b.Property<byte>("Faction")
                        .HasColumnType("tinyint unsigned");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastConnectionTime")
                        .HasColumnType("DATETIME");

                    b.Property<byte>("MaxMode")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(16) CHARACTER SET utf8mb4")
                        .HasMaxLength(16);

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(19) CHARACTER SET utf8mb4")
                        .HasMaxLength(19);

                    b.HasKey("Id");

                    b.HasIndex("Username", "Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbCharacter", b =>
                {
                    b.HasOne("Imgeneus.Database.Entities.DbUser", "User")
                        .WithMany("Characters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbCharacterItems", b =>
                {
                    b.HasOne("Imgeneus.Database.Entities.DbCharacter", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
